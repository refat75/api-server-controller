// Code generated by applyconfiguration-gen. DO NOT EDIT.

package applyconfiguration

import (
	appscoderefatdevv1 "github.com/refat75/api-server-controller/pkg/generated/applyconfiguration/appscode.refat.dev/v1"
	internal "github.com/refat75/api-server-controller/pkg/generated/applyconfiguration/internal"
	v1 "github.com/refat75/apiservercontroller/pkg/apis/appscode.refat.dev/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	schema "k8s.io/apimachinery/pkg/runtime/schema"
	testing "k8s.io/client-go/testing"
)

// ForKind returns an apply configuration type for the given GroupVersionKind, or nil if no
// apply configuration type exists for the given GroupVersionKind.
func ForKind(kind schema.GroupVersionKind) interface{} {
	switch kind {
	// Group=appscode.refat.dev, Version=v1
	case v1.SchemeGroupVersion.WithKind("Apiserver"):
		return &appscoderefatdevv1.ApiserverApplyConfiguration{}
	case v1.SchemeGroupVersion.WithKind("ApiServerSpec"):
		return &appscoderefatdevv1.ApiServerSpecApplyConfiguration{}

	}
	return nil
}

func NewTypeConverter(scheme *runtime.Scheme) *testing.TypeConverter {
	return &testing.TypeConverter{Scheme: scheme, TypeResolver: internal.Parser()}
}
