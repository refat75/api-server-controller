// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// ApiServerSpecApplyConfiguration represents a declarative configuration of the ApiServerSpec type for use
// with apply.
type ApiServerSpecApplyConfiguration struct {
	Image    *string `json:"image,omitempty"`
	Replicas *int32  `json:"replicas,omitempty"`
	Port     *int32  `json:"port,omitempty"`
}

// ApiServerSpecApplyConfiguration constructs a declarative configuration of the ApiServerSpec type for use with
// apply.
func ApiServerSpec() *ApiServerSpecApplyConfiguration {
	return &ApiServerSpecApplyConfiguration{}
}

// WithImage sets the Image field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Image field is set to the value of the last call.
func (b *ApiServerSpecApplyConfiguration) WithImage(value string) *ApiServerSpecApplyConfiguration {
	b.Image = &value
	return b
}

// WithReplicas sets the Replicas field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Replicas field is set to the value of the last call.
func (b *ApiServerSpecApplyConfiguration) WithReplicas(value int32) *ApiServerSpecApplyConfiguration {
	b.Replicas = &value
	return b
}

// WithPort sets the Port field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Port field is set to the value of the last call.
func (b *ApiServerSpecApplyConfiguration) WithPort(value int32) *ApiServerSpecApplyConfiguration {
	b.Port = &value
	return b
}
