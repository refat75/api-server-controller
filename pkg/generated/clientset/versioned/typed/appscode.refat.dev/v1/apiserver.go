// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	context "context"

	appscoderefatdevv1 "github.com/refat75/apiServerController/pkg/apis/appscode.refat.dev/v1"
	applyconfigurationappscoderefatdevv1 "github.com/refat75/apiServerController/pkg/generated/applyconfiguration/appscode.refat.dev/v1"
	scheme "github.com/refat75/apiServerController/pkg/generated/clientset/versioned/scheme"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// ApiserversGetter has a method to return a ApiserverInterface.
// A group's client should implement this interface.
type ApiserversGetter interface {
	Apiservers(namespace string) ApiserverInterface
}

// ApiserverInterface has methods to work with Apiserver resources.
type ApiserverInterface interface {
	Create(ctx context.Context, apiserver *appscoderefatdevv1.Apiserver, opts metav1.CreateOptions) (*appscoderefatdevv1.Apiserver, error)
	Update(ctx context.Context, apiserver *appscoderefatdevv1.Apiserver, opts metav1.UpdateOptions) (*appscoderefatdevv1.Apiserver, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*appscoderefatdevv1.Apiserver, error)
	List(ctx context.Context, opts metav1.ListOptions) (*appscoderefatdevv1.ApiserverList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *appscoderefatdevv1.Apiserver, err error)
	Apply(ctx context.Context, apiserver *applyconfigurationappscoderefatdevv1.ApiserverApplyConfiguration, opts metav1.ApplyOptions) (result *appscoderefatdevv1.Apiserver, err error)
	ApiserverExpansion
}

// apiservers implements ApiserverInterface
type apiservers struct {
	*gentype.ClientWithListAndApply[*appscoderefatdevv1.Apiserver, *appscoderefatdevv1.ApiserverList, *applyconfigurationappscoderefatdevv1.ApiserverApplyConfiguration]
}

// newApiservers returns a Apiservers
func newApiservers(c *AppscodeV1Client, namespace string) *apiservers {
	return &apiservers{
		gentype.NewClientWithListAndApply[*appscoderefatdevv1.Apiserver, *appscoderefatdevv1.ApiserverList, *applyconfigurationappscoderefatdevv1.ApiserverApplyConfiguration](
			"apiservers",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *appscoderefatdevv1.Apiserver { return &appscoderefatdevv1.Apiserver{} },
			func() *appscoderefatdevv1.ApiserverList { return &appscoderefatdevv1.ApiserverList{} },
		),
	}
}
